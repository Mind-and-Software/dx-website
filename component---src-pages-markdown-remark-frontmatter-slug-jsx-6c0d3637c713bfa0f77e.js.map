{"version":3,"sources":["webpack://dx-website/./src/components/RelatedArticles.jsx","webpack://dx-website/./src/styles/article.module.scss","webpack://dx-website/./src/pages/{MarkdownRemark.frontmatter__slug}.jsx"],"names":["tagSeparator","Article","markdownRemark","data","frontmatter","html","className","aria-label","tags","map","tag","key","Tag","type","action","readingTime","date","title","author","Image","imageData","featuredImage","alt","imageAlt","Blurb","blurb","dangerouslySetInnerHTML","__html"],"mappings":"sMAIA,EAFwB,kBAAM,gD,UCGnBA,EAAe,sCCcX,SAASC,EAAT,GAA4B,IACjCC,EADgC,EAARC,KACxBD,eACAE,EAAsBF,EAAtBE,YAAaC,EAASH,EAATG,KAErB,OACE,gBAAC,IAAD,KACE,2BAASC,UDxBM,kCCyBb,uBAAKC,aAAW,eAAeD,UDtBrB,+BCuBR,wBAAMC,aAAW,QACdH,EAAYI,MACXJ,EAAYI,KAAKC,KAAI,SAACC,GAAD,OACnB,wBAAMC,IAAKD,GACT,gBAACE,EAAA,EAAD,CAAKC,KAAK,OAAOC,OAAO,KACrBJ,GAEH,wBAAMJ,UAAWN,GAAjB,UAIPI,EAAYW,aACX,4BACMX,EAAYW,YADlB,YAEE,wBAAMT,UAAWN,GAAjB,MAGJ,4BAAOI,EAAYY,OAErB,0BAAKZ,EAAYa,OACjB,qBAAGV,aAAW,UAAUH,EAAYc,QACpC,gBAACC,EAAA,EAAD,CACEb,UD9CgB,uCC+ChBc,UAAWhB,EAAYiB,cACvBC,IAAKlB,EAAYmB,WAEnB,gBAACC,EAAA,EAAD,KAAQpB,EAAYqB,OACpB,uBACEnB,UDrDkB,yCCuDlBoB,wBAAyB,CAAEC,OAAQtB,MAGvC,gBAAC,EAAD","file":"component---src-pages-markdown-remark-frontmatter-slug-jsx-6c0d3637c713bfa0f77e.js","sourcesContent":["import React from 'react';\n\nconst RelatedArticles = () => <div>Related articles</div>;\n\nexport default RelatedArticles;\n","// extracted by mini-css-extract-plugin\nexport var article = \"article-module--article--2eyuf\";\nexport var articleContent = \"article-module--article-content--1lJlH\";\nexport var articleImage = \"article-module--article-image--3a7a_\";\nexport var meta = \"article-module--meta--t5UbQ\";\nexport var tagSeparator = \"article-module--tagSeparator--1siAD\";","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { graphql } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\n\nimport Blurb from '../components/Blurb';\nimport Image from '../components/Image';\nimport Layout from '../components/layout';\nimport RelatedArticles from '../components/RelatedArticles';\nimport Tag from '../components/Tag';\n\nimport {\n  article,\n  articleContent,\n  articleImage,\n  meta,\n  tagSeparator,\n} from '../styles/article.module.scss';\n\nexport default function Article({ data }) {\n  const { markdownRemark } = data;\n  const { frontmatter, html } = markdownRemark;\n\n  return (\n    <Layout>\n      <article className={article}>\n        <div aria-label=\"Article info\" className={meta}>\n          <span aria-label=\"Tags\">\n            {frontmatter.tags &&\n              frontmatter.tags.map((tag) => (\n                <span key={tag}>\n                  <Tag type=\"link\" action=\"/\">\n                    {tag}\n                  </Tag>\n                  <span className={tagSeparator}>•</span>\n                </span>\n              ))}\n          </span>\n          {frontmatter.readingTime && (\n            <span>\n              {`${frontmatter.readingTime} min read`}\n              <span className={tagSeparator}>•</span>\n            </span>\n          )}\n          <span>{frontmatter.date}</span>\n        </div>\n        <h1>{frontmatter.title}</h1>\n        <p aria-label=\"author\">{frontmatter.author}</p>\n        <Image\n          className={articleImage}\n          imageData={frontmatter.featuredImage}\n          alt={frontmatter.imageAlt}\n        />\n        <Blurb>{frontmatter.blurb}</Blurb>\n        <div\n          className={articleContent}\n          // eslint-disable-next-line react/no-danger\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </article>\n      <RelatedArticles />\n    </Layout>\n  );\n}\nexport const pageQuery = graphql`\n  query ($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      html\n      frontmatter {\n        date(formatString: \"DD MMMM, YYYY\")\n        slug\n        title\n        author\n        blurb\n        tags\n        readingTime\n        featuredImage {\n          childImageSharp {\n            gatsbyImageData(width: 800)\n          }\n        }\n        imageAlt\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}