{"version":3,"file":"component---src-templates-blog-jsx-8ae5a8ff841e290540c3.js","mappings":"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","sources":["webpack://dx-website/./src/components/ImageLink.jsx","webpack://dx-website/./src/components/ProfilePicture.jsx","webpack://dx-website/./src/styles/profilePicture.module.scss","webpack://dx-website/./src/components/ArticlePreview.jsx","webpack://dx-website/./src/styles/articlePreview.module.scss","webpack://dx-website/./src/components/Blurb.jsx","webpack://dx-website/./src/styles/blurb.module.scss","webpack://dx-website/./src/components/Image.jsx","webpack://dx-website/./src/components/RelatedContent.jsx","webpack://dx-website/./src/styles/relatedContent.module.scss","webpack://dx-website/./src/styles/tag.module.scss","webpack://dx-website/./src/components/Tag.jsx","webpack://dx-website/./src/styles/article.module.scss","webpack://dx-website/./src/templates/blog.jsx"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nimport Image from './Image';\n\nconst ImageLink = ({ to, imageData, alt }) => (\n  <Link to={to} aria-label={`Preview picture of article: ${alt}`}>\n    <Image imageData={imageData} alt={alt} />\n  </Link>\n);\nImageLink.defaultProps = {\n  imageData: 'placeholder.png',\n};\n\nImageLink.propTypes = {\n  to: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  imageData: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n};\n\nexport default ImageLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nimport Image from './Image';\nimport { profilePicture } from '../styles/profilePicture.module.scss';\n\nconst ProfilePicture = ({ url, imageData }) => (\n  <Link\n    to={url}\n    aria-label=\"Picture of the author of this article\"\n    data-testid=\"profilepic\"\n  >\n    <Image\n      className={profilePicture}\n      imageData={imageData}\n      alt=\"Article preview profilepicture\"\n    />\n  </Link>\n);\n\nProfilePicture.defaultProps = {\n  url: '/',\n};\n\nProfilePicture.propTypes = {\n  url: PropTypes.string,\n  imageData: PropTypes.object.isRequired,\n};\n\nexport default ProfilePicture;\n","// extracted by mini-css-extract-plugin\nexport var profilePicture = \"profilePicture-module--profilePicture--3NqjX\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nimport ImageLink from './ImageLink';\nimport ProfilePicture from './ProfilePicture';\nimport Tag from './Tag';\n\nimport {\n  articlePreview,\n  rowSection,\n  authorSection,\n  infoSection,\n  imageLink,\n  dot,\n  descriptionSection,\n  typeSection,\n  author,\n} from '../styles/articlePreview.module.scss';\n\nexport const AuthorSection = ({ name, url, credentials, image }) => (\n  // TODO: Profile picture for user and link to their profile\n  <div className={authorSection}>\n    {/* {image && (\n      <ProfilePicture\n        url={url}\n        imageData={image.node.childImageSharp.gatsbyImageData}\n      />\n    )} */}\n    <span className={author}>{credentials ? `${name},` : name}</span>\n    {credentials}\n  </div>\n);\n\nAuthorSection.defaultProps = {\n  url: '',\n  image: '',\n  credentials: '',\n};\n\nAuthorSection.propTypes = {\n  name: PropTypes.string.isRequired,\n  url: PropTypes.string,\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  credentials: PropTypes.string,\n};\n\nconst Dot = () => <span className={dot}>â€¢</span>;\n\nconst renderTags = (tags) => {\n  if (tags && tags.length > 0) {\n    return tags.map((tag) => (\n      <div key={tag}>\n        <Tag type=\"link\" action={`/tags/${tag}`}>\n          {tag}\n        </Tag>\n        <Dot />\n      </div>\n    ));\n  }\n  return '';\n};\n\nconst renderReadingTime = (readingTime) => {\n  if (readingTime) {\n    return (\n      <div aria-label=\"Reading time of the article\">{`${readingTime} min read`}</div>\n    );\n  }\n  return '';\n};\n\nconst ArticlePreview = ({\n  articleUrl,\n  previewImage,\n  imageAlt,\n  tags,\n  title,\n  type,\n  readingTime,\n  date,\n  description,\n  authorName,\n  authorCredentials,\n  authorImage,\n  authorUrl,\n}) => (\n  <div className={articlePreview} aria-label=\"Article preview\" data-test-id=\"articlePreview\">\n    {previewImage && (\n      <div className={imageLink}>\n        <ImageLink\n          to={articleUrl}\n          imageData={previewImage.childImageSharp.gatsbyImageData}\n          alt={imageAlt}\n        />\n      </div>\n    )}\n    <div className={infoSection}>\n      <div className={rowSection}>\n        {renderTags(tags)}\n        {renderReadingTime(readingTime)}\n        {readingTime && date && <Dot />}\n        {date}\n      </div>\n      <div>\n        <Link to={articleUrl}>\n          <h4>{title}</h4>\n        </Link>\n        <div className={descriptionSection}>{description}</div>\n        {type && <div className={typeSection}>{type}</div>}\n        {authorName && (\n          <AuthorSection\n            name={authorName}\n            credentials={authorCredentials}\n            url={authorUrl}\n            image={authorImage}\n          />\n        )}\n      </div>\n    </div>\n  </div>\n);\n\nArticlePreview.defaultProps = {\n  previewImage: '',\n  tags: [],\n  type: '',\n  readingTime: '',\n  date: '',\n  description: '',\n  authorName: '',\n  authorUrl: '/',\n  authorImage: '',\n  authorCredentials: '',\n  imageAlt: '',\n};\n\nArticlePreview.propTypes = {\n  articleUrl: PropTypes.string.isRequired,\n  previewImage: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  imageAlt: PropTypes.string,\n  tags: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  readingTime: PropTypes.string,\n  date: PropTypes.string,\n  description: PropTypes.node,\n  authorName: PropTypes.string,\n  authorUrl: PropTypes.string,\n  authorImage: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  authorCredentials: PropTypes.string,\n};\n\nexport default ArticlePreview;\n","// extracted by mini-css-extract-plugin\nexport var articlePreview = \"articlePreview-module--article-preview--2fbNF\";\nexport var infoSection = \"articlePreview-module--info-section--19eNQ\";\nexport var rowSection = \"articlePreview-module--row-section--2xRiF\";\nexport var authorSection = \"articlePreview-module--author-section--uPydT\";\nexport var author = \"articlePreview-module--author--3RHNl\";\nexport var imageLink = \"articlePreview-module--image-link--18clN\";\nexport var dot = \"articlePreview-module--dot--2KcIv\";\nexport var descriptionSection = \"articlePreview-module--description-section--3a4_u\";\nexport var typeSection = \"articlePreview-module--typeSection--2CDzW\";","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { blurb } from '../styles/blurb.module.scss';\n\nconst Blurb = ({ children }) => {\n  const isEmpty = children === '' || children == null;\n\n  return isEmpty ? (\n    ''\n  ) : (\n    <aside className={blurb} aria-label=\"Text Blurb\">\n      {children}\n    </aside>\n  );\n};\n\nBlurb.defaultProps = {\n  children: '',\n};\n\nBlurb.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Blurb;\n","// extracted by mini-css-extract-plugin\nexport var blurb = \"blurb-module--blurb--3aElL\";","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\n\nconst Image = ({ className, imageData, alt }) => {\n  const image = getImage(imageData);\n  return <GatsbyImage className={className} image={image} alt={alt} />;\n};\n\nImage.defaultProps = {\n  imageData: 'placeholder.png',\n  className: '',\n};\n\nImage.propTypes = {\n  alt: PropTypes.string.isRequired,\n  imageData: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n  className: PropTypes.string,\n};\n\nexport default Image;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ArticlePreview from './ArticlePreview';\n\nimport {\n  contentItem,\n  contentPreviews,\n  relatedContent,\n} from '../styles/relatedContent.module.scss';\n\nconst RelatedContent = ({ contentList, title }) => (\n  <aside className={relatedContent} role=\"complementary\">\n    <h2>{title}</h2>\n    <ul className={contentPreviews}>\n      {contentList &&\n        contentList.map((edge) => {\n          const content = edge.node.frontmatter;\n          const slug = edge.node.fields.slug;\n          return (\n            <li className={contentItem} key={content.title}>\n              <ArticlePreview\n                articleUrl={slug}\n                imageAlt={content.imageAlt}\n                previewImage={content.featuredImage}\n                title={content.title}\n                tags={content.tags}\n                readingTime={content.readingTime}\n                date={content.date}\n                description={content.description}\n                author={content.author}\n                authorImage={content.authorImage}\n                authorCredentials={content.authorCredentials}\n                authorImage={content.authorImage}\n              />\n            </li>\n          );\n        })}\n    </ul>\n  </aside>\n);\n\nRelatedContent.defaultProps = {\n  title: '',\n};\n\nRelatedContent.propTypes = {\n  contentList: PropTypes.arrayOf(PropTypes.object).isRequired,\n  title: PropTypes.string,\n};\n\nexport default RelatedContent;\n","// extracted by mini-css-extract-plugin\nexport var contentItem = \"relatedContent-module--content-item--3AerO\";\nexport var contentPreviews = \"relatedContent-module--content-previews--2gaWp\";\nexport var relatedContent = \"relatedContent-module--related-content--Q7RDW\";","// extracted by mini-css-extract-plugin\nexport var toggleTag = \"tag-module--toggleTag--24ulh\";\nexport var toggleTagActive = \"tag-module--toggleTag--active--267PV\";\nexport var tag = \"tag-module--tag--2TGyQ\";\nexport var wideTag = \"tag-module--wide-tag--2p6uZ\";","import React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nimport {\n  tag,\n  toggleTag,\n  toggleTagActive,\n  wideTag,\n} from '../styles/tag.module.scss';\n\nconst Tag = ({ children, type, action, handleToggle, isActive, wide }) => {\n  const buttonRef = useRef(null);\n\n  const handleClick = () => {\n    handleToggle(children);\n    buttonRef.current.blur();\n  };\n\n  if (type === 'link') {\n    return (\n      <Link to={action} className={tag} aria-label={`Goto ${children}`}>\n        {children}\n      </Link>\n    );\n  }\n  if (type === 'toggle') {\n    return (\n      <button\n        type=\"button\"\n        ref={buttonRef}\n        className={`${toggleTag} ${isActive ? toggleTagActive : ''} ${\n          wide ? wideTag : ''\n        }`}\n        onClick={handleClick}\n        aria-label={`Toggle ${isActive ? 'off' : 'on'} filter for ${children} `}\n      >\n        {children}\n      </button>\n    );\n  }\n  return <span className={tag}>{children}</span>;\n};\n\nTag.defaultProps = {\n  action: '',\n  type: '',\n  handleToggle: null,\n  isActive: false,\n  wide: false,\n};\n\nTag.propTypes = {\n  action: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  children: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  handleToggle: PropTypes.func,\n  isActive: PropTypes.bool,\n  wide: PropTypes.bool,\n};\n\nexport default Tag;\n","// extracted by mini-css-extract-plugin\nexport var article = \"article-module--article--2eyuf\";\nexport var articleContent = \"article-module--article-content--1lJlH\";\nexport var articleImage = \"article-module--article-image--3a7a_\";\nexport var meta = \"article-module--meta--t5UbQ\";\nexport var tagSeparator = \"article-module--tagSeparator--1siAD\";","/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { graphql } from 'gatsby';\n\nimport Blurb from '../components/Blurb';\nimport Image from '../components/Image';\nimport Layout from '../components/layout';\nimport RelatedContent from '../components/RelatedContent';\nimport Tag from '../components/Tag';\n\nimport {\n  article,\n  articleContent,\n  articleImage,\n  meta,\n  tagSeparator,\n} from '../styles/article.module.scss';\n\nexport default function Article({ data }) {\n  const { frontmatter, html } = data.post;\n  const relatedContent = data.relatedContent.edges;\n\n  return (\n    <Layout>\n      <article className={article}>\n        <div aria-label=\"Article info\" className={meta}>\n          <span aria-label=\"Tags\">\n            {frontmatter.tags &&\n              frontmatter.tags.map((tag) => (\n                <span key={tag}>\n                  <Tag type=\"link\" action={`/tags/${tag}`}>\n                    {tag}\n                  </Tag>\n                  <span className={tagSeparator}>â€¢</span>\n                </span>\n              ))}\n          </span>\n          {frontmatter.readingTime && (\n            <span>\n              {`${frontmatter.readingTime} min read`}\n              <span className={tagSeparator}>â€¢</span>\n            </span>\n          )}\n          <span>{frontmatter.date}</span>\n        </div>\n        <h1>{frontmatter.title}</h1>\n        <p aria-label=\"author\">{frontmatter.author}</p>\n        <Image\n          className={articleImage}\n          imageData={frontmatter.featuredImage}\n          alt={frontmatter.imageAlt}\n        />\n        <Blurb>{frontmatter.blurb}</Blurb>\n        <div\n          className={articleContent}\n          // eslint-disable-next-line react/no-danger\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </article>\n      <RelatedContent title=\"Related content\" contentList={relatedContent} />\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query ($slug: String!, $tags: [String!]) {\n    post: markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        date(formatString: \"DD MMMM, YYYY\")\n        slug\n        title\n        author\n        blurb\n        tags\n        readingTime\n        featuredImage {\n          childImageSharp {\n            gatsbyImageData(width: 800)\n          }\n        }\n        imageAlt\n      }\n    }\n    relatedContent: allMarkdownRemark(\n      filter: { frontmatter: { tags: { in: $tags } } }\n      limit: 3\n      sort: { fields: frontmatter___date, order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            tags\n            readingTime\n            title\n            description\n            authorCredentials\n            author\n            authorUrl\n            date(formatString: \"DD MMM, YY\")\n            imageAlt\n            authorImage {\n              childrenImageSharp {\n                gatsbyImageData(width: 30)\n              }\n            }\n            featuredImage {\n              childImageSharp {\n                gatsbyImageData(width: 350, height: 135)\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["ImageLink","to","imageData","alt","Link","Image","defaultProps","ProfilePicture","url","className","AuthorSection","name","credentials","image","Dot","ArticlePreview","articleUrl","previewImage","imageAlt","tags","title","type","readingTime","date","description","authorName","authorCredentials","authorImage","authorUrl","childImageSharp","gatsbyImageData","length","map","tag","key","Tag","action","renderTags","renderReadingTime","Blurb","children","getImage","G","RelatedContent","contentList","role","edge","content","node","frontmatter","slug","fields","featuredImage","author","handleToggle","isActive","wide","buttonRef","useRef","ref","toggleTag","onClick","current","blur","tagSeparator","Article","data","post","html","relatedContent","edges","blurb","dangerouslySetInnerHTML","__html"],"sourceRoot":""}